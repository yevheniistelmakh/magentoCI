name: Deploy to Amazon ECS

on:
 workflow_dispatch:
   inputs:
     AWS_ACCOUNT:
       description: 'AWS ACCOUNT'
       required: true
       type: text
       default: 908410081654
     AWS_REGION:
       description: 'AWS REGION'
       required: true
       type: text
       default: eu-central-1
     ECR_REPO:
       description: 'ECR REPOSITORY'
       required: true
       type: text
       default: magento3
     IMAGE_TAG_NGINX:
       description: 'IMAGE TAG NGINX'
       required: true
       type: text
       default: nginx_123   
     IMAGE_TAG_PHP:
       description: 'IMAGE TAG PHP'
       required: true
       type: text
       default:  php-magento2
     CONTAINER_NAME_PHP:
       description: 'CONTAINER NAME PHP'
       required: true
       type: text
       default:  sigma_magento-php_fpm
     CONTAINER_NAME_NGINX:
       description: 'CONTAINER NAME NGINX'
       required: true
       type: text
       default:  sigma_magento-nginx
     ECS_SERVICE_NAME:
       description: 'ECS SERVICE'
       required: true
       type: text
       default:  magento-service-CI
     ECS_CLUSTER_NAME:
       description: 'ECS CLUSTER'
       required: true
       type: text
       default:  magento-cluster-CI
#      TASK_VERSION:
#        description: 'TASK VERSION'
#        required: true
#        type: text
#        default:  latest
     
env:
  ECS_TD_JSON_FILE:             AWS_ECS_task-definition.json
 # TASK_VERSION:                   latest                                           ${{ github.event.inputs.TASK_VERSION }}
#   AWS_REGION:                    eu-central-1                                     ${{ github.event.inputs.AWS_REGION }}
#   ECR_REPOSITORY:                magento3                                         ${{ github.event.inputs.ECR_REPO }}
#   AWS_ACCOUNT:                   908410081654                                     ${{ github.event.inputs.AWS_ACCOUNT }}
#   ECR_REGISTRY:                  908410081654.dkr.ecr.eu-central-1.amazonaws.com    -\\-
#    ECS_SERVICE:                  magento-service-CI                               ${{ github.event.inputs.ECS_SERVICE_NAME }}
#    ECS_CLUSTER:                  magento-cluster-CI                               ${{ github.event.inputs.ECS_CLUSTER_NAME }}
#    ECS_TD_CONTAINER_PHP:         sigma_magento-php_fpm                            ${{ github.event.inputs.CONTAINER_NAME_PHP }}
#    ECS_TD_CONTAINER_NGINX:       sigma_magento-nginx                              ${{ github.event.inputs.CONTAINER_NAME_NGINX }}
#   ECS_TD_IMAGE_TAG_PHP:          php-magento2                                     ${{ github.event.inputs.IMAGE_TAG_PHP }}
#   ECS_TD_IMAGE_TAG_NGINX:        nginx_123                                        ${{ github.event.inputs.IMAGE_TAG_NGINX }}
   
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy ubuntu
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Git clone repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.AWS_REGION }}
        
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
    

        
    - name: Render Amazon ECS task definition for first container nginx
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TD_JSON_FILE }}
        container-name: ${{ github.event.inputs.CONTAINER_NAME_NGINX }}
        image: ${{ github.event.inputs.AWS_ACCOUNT }}.dkr.ecr.${{ github.event.inputs.AWS_REGION }}.amazonaws.com/${{ github.event.inputs.ECR_REPO }}:${{ github.event.inputs.IMAGE_TAG_NGINX }}
    
    - name: Render Amazon ECS task definition for second container php
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TD_JSON_FILE }}
        container-name: ${{ github.event.inputs.CONTAINER_NAME_PHP }}
        image: ${{ github.event.inputs.AWS_ACCOUNT }}.dkr.ecr.${{ github.event.inputs.AWS_REGION }}.amazonaws.com/${{ github.event.inputs.ECR_REPO }}:${{ github.event.inputs.IMAGE_TAG_PHP }}
        
    - name: Deploy task definition in ECS service
      env:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.AWS_REGION }}
      run: |
       aws ecs stop-task --cluster magento-cluster-CI --task abb9f250b73b496eb1dbeebf53be59eb
       aws ecs update-service --cluster ${{ github.event.inputs.ECS_CLUSTER_NAME }} --service ${{ github.event.inputs.ECS_SERVICE_NAME }} --task-definition CccomboEXIT:9   --force-new-deployment
       
