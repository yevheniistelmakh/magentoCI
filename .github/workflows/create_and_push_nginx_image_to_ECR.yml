
name: Create and push nginx image to ECR

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Test scan'     
        required: true
        default: 'warning' 
        type: choice
        options:
        - create nginx image
      tags:
        description: 'skip scan'
        required: false 
        type: boolean

env:
  SKIP_SCAN:            ${{ github.event.inputs.tags }}
  AWS_ACCOUNT:          '908410081654'
  AWS_REGION:           'eu-central-1'
  TAG_NGINX:            'latest'
  ECR_REGISTRY_NGINX:   '${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com'
  ECR_REPOSITORY_NGINX: 'nginx'
  IMAGE:                '${{ env.ECR_REGISTRY_NGINX }}/${{ env.ECR_REPOSITORY_NGINX }}:${{ env.TAG_NGINX }}'
  
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
          
    - name: build nginx image           
      run: 
        docker build -f nginx/Dockerfile -t ${{ env.IMAGE }} . 
        
    - name: scan nginx image
      id: scan
      uses: anchore/scan-action@v3.2.5
      with:
        image:  '${{ env.IMAGE }}'
        fail-build: '${{ env.SKIP_SCAN }}'
        severity-cutoff:  High
        acs-report-enable: true
      
    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
        
    - name: push nginx image
      run: 
        docker push '${{ env.IMAGE }}'

