name: Create and push nginx image to ECR

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning' 
        type: choice
        options:
        - create a new image
      tags:
        description: 'Test scenario tags'
        required: false 
        type: boolean

jobs:
  deploy:
    name: Deploy ubuntu
    runs-on: ubuntu-latest
    permissions:
      packages: write
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
          
    - name: Build nginx image           
      run: |
        docker build -f nginx/Dockerfile -t ${{ secrets.ECR_REGISTRY_NGINX }}/${{ secrets.ECR_REPOSITORY_NGINX }}:${{ TAG_NGINX }} .  
        echo ${{ secrets.DISPATCH_TAG }}
        
    - name: Scan nginx image
      if: ${{ secrets.DISPATCH_TAG == 'false' }}
      uses: anchore/scan-action@v3
      continue-on-error: true
      with:
        image: "${{ secrets.ECR_REGISTRY_NGINX }}/${{ secrets.ECR_REPOSITORY_NGINX }}:${{ TAG_NGINX }}"        
        fail-build: true
        severity: HIGH, CRITICAL, MEDIUM
    
    - name: Push nginx image to ECR
      if: ${{ env.WORKFLOW_DISPATCH_TAG == 'true' }}
      run: docker push ${{ secrets.ECR_REGISTRY_NGINX }}/${{ secrets.ECR_REPOSITORY_NGINX }}:${{ secrets.TAG_NGINX }}
